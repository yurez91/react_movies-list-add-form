{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/TextField.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","TextField","name","changeHandler","value","errors","blurHandler","htmlFor","id","type","placeholder","aria-describedby","onChange","onBlur","NewMovie","state","formErrors","titleValid","imgUrlValid","imdbUrlvalid","imdbIdValid","target","setState","trimLeft","validateField","submitHandler","event","preventDefault","addMovie","props","fieldName","this","prevState","fieldValidationErrors","regExPattern","length","test","disabled","onSubmit","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40cfb44e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropsType from 'prop-types';\n\nconst TextField = ({\n  name,\n  changeHandler,\n  value,\n  errors,\n  blurHandler,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name} className=\"font-weight-bold\">\n        {`Movie ${name}`}\n      </label>\n      <input\n        className={`form-control ${errors[name] ? 'border border-danger' : ''}`}\n        id={name}\n        type=\"text\"\n        name={name}\n        value={value}\n        placeholder={\n          `${(name === 'imgUrl' || name === 'imdbUrl')\n            ? 'https://amazon.com/images/pict.jpg'\n            : `Enter ${name}`}`}\n        aria-describedby=\"inputText\"\n        onChange={changeHandler}\n        onBlur={blurHandler}\n      />\n      {errors[name] && (\n        <small id=\"inputText\" className=\"form-text text-danger\">\n          {`Field ${name} ${errors[name]}`}\n        </small>\n      )}\n    </div>\n  );\n};\n\nTextField.propTypes = {\n  name: PropsType.string.isRequired,\n  changeHandler: PropsType.func.isRequired,\n  blurHandler: PropsType.func.isRequired,\n  value: PropsType.string.isRequired,\n  errors: PropsType.shape({\n    title: PropsType.string,\n    imgUrl: PropsType.string,\n    imdbUrl: PropsType.string,\n    imdbId: PropsType.string,\n  }).isRequired,\n};\n\nexport default TextField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '../TextField';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    formErrors: {\n      title: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    titleValid: false,\n    imgUrlValid: false,\n    imdbUrlvalid: false,\n    imdbIdValid: false,\n  };\n\n  changeHandler = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value.trimLeft() }, () => {\n      this.validateField(name, value);\n    });\n  }\n\n  blurHandler = ({ target }) => {\n    const { name, value } = target;\n\n    this.validateField(name, value);\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n\n    const { addMovie } = this.props;\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    addMovie({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      titleValid: false,\n      imgUrlValid: false,\n      imdbUrlvalid: false,\n      imdbIdValid: false,\n    });\n  }\n\n  validateField(fieldName, value) {\n    this.setState((prevState) => {\n      const fieldValidationErrors = prevState.formErrors;\n      /* eslint-disable-next-line */\n      const regExPattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n      let {\n        titleValid,\n        imgUrlValid,\n        imdbUrlvalid,\n        imdbIdValid,\n      } = prevState;\n\n      switch (fieldName) {\n        case 'title': {\n          titleValid = value.length > 0;\n          fieldValidationErrors.title = titleValid ? '' : 'is required';\n          break;\n        }\n\n        case 'imdbId': {\n          imdbIdValid = value.length > 0;\n          fieldValidationErrors.imdbId = imdbIdValid ? '' : 'is required';\n          break;\n        }\n\n        case 'imgUrl': {\n          imgUrlValid = regExPattern.test(value);\n          fieldValidationErrors.imgUrl = imgUrlValid\n            ? ''\n            : 'must be correct url';\n          break;\n        }\n\n        case 'imdbUrl': {\n          imdbUrlvalid = regExPattern.test(value);\n          fieldValidationErrors.imdbUrl = imdbUrlvalid\n            ? ''\n            : 'must be correct url';\n          break;\n        }\n\n        default: break;\n      }\n\n      return {\n        formErrors: fieldValidationErrors,\n        titleValid,\n        imdbIdValid,\n        imgUrlValid,\n        imdbUrlvalid,\n      };\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      formErrors,\n      titleValid,\n      imgUrlValid,\n      imdbUrlvalid,\n      imdbIdValid,\n    } = this.state;\n\n    const disabled = titleValid && imgUrlValid && imdbUrlvalid && imdbIdValid;\n\n    return (\n      <form onSubmit={this.submitHandler}>\n        <TextField\n          name=\"title\"\n          value={title}\n          errors={formErrors}\n          changeHandler={this.changeHandler}\n          blurHandler={this.blurHandler}\n        />\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          value={description}\n          className=\"textarea\"\n          placeholder=\"Description...\"\n          onChange={this.changeHandler}\n        />\n        <TextField\n          name=\"imgUrl\"\n          value={imgUrl}\n          errors={formErrors}\n          changeHandler={this.changeHandler}\n          blurHandler={this.blurHandler}\n        />\n        <TextField\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          errors={formErrors}\n          changeHandler={this.changeHandler}\n          blurHandler={this.blurHandler}\n        />\n        <TextField\n          name=\"imdbId\"\n          value={imdbId}\n          errors={formErrors}\n          changeHandler={this.changeHandler}\n          blurHandler={this.blurHandler}\n        />\n        <button\n          className=\"btn btn-success btn-lg btn-block\"\n          type=\"submit\"\n          disabled={!disabled}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      ...prevState,\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}